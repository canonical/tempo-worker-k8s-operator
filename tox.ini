# Copyright 2023 Canonical
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = fmt, lint, static-charm, static-lib, unit, scenario

[vars]
src_path = {toxinidir}/src/
tst_path = {toxinidir}/tests/
;lib_path = {toxinidir}/lib/charms/operator_name_with_underscores
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
setenv =
  PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
  PYTHONBREAKPOINT=pdb.set_trace
  PY_COLORS=1
passenv =
  PYTHONPATH
  CHARM_BUILD_DIR
  MODEL_SETTINGS

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
    ruff
commands =
    black {[vars]all_path}
    ruff check --fix {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    ruff
    codespell
commands =
    # uncomment the following line if this charm owns a lib
    # codespell {[vars]lib_path}
    codespell {toxinidir} \
              --skip {toxinidir}/.git \
              --skip {toxinidir}/.tox \
              --skip {toxinidir}/build \
              --skip {toxinidir}/lib \
              --skip {toxinidir}/venv \
              --skip {toxinidir}/.mypy_cache \
              --skip {toxinidir}/icon.svg

    ruff check {[vars]all_path}
    black --check --diff {[vars]all_path}

[testenv:static-{charm, lib}]
description = Run static analysis checks
deps =
  pyright
  -r {toxinidir}/requirements.txt
commands =
  charm: pyright

[testenv:{unit, scenario}]
description = Unit and scenario tests
deps =
    pytest
    pytest-cov
    ops-scenario>=7.0.1
    -r{toxinidir}/requirements.txt
commands =
    pytest {tty:--color=yes} --cov={[vars]src_path} --cov-config={tox_root}/pyproject.toml \
        --cov-report=xml:{tox_root}/results/coverage-{env_name}.xml \
        --junit-xml={tox_root}/results/test-results-{env_name}.xml {posargs}

[testenv:integration]
description = (Run integration tests)
deps =
commands =
